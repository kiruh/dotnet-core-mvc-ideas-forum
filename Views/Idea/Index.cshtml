@model PaginatedList<Ideas.Models.Idea>

@{
    ViewData["Title"] = "Ideas";
}

<h2>Ideas</h2>
<hr />

@foreach (var item in Model)
{
    <div class="row">
        <div class="col-md-2">
            <div>
                <strong>@Html.DisplayFor(modelItem => item.User.FullName)</strong>
            </div>
            <div>
                <span>@Html.DisplayFor(modelItem => item.CreatedAtDisplay)</span>
            </div>
            <div>
                <a asp-action="Details" asp-route-id="@item.Id">View</a>
            </div>
        </div>
        <div class="col-md-10">
            <div class="alert alert-info well-lg">
                @Html.DisplayFor(modelItem => item.Text)
            </div>
        </div>
    </div>
}

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>